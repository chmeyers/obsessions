# Events for managing scientists who are currently obsessed.
namespace = obsessions_mod_scientist

@obsession_end_level = 6
@obsession_breaking_point = 5
@obsession_near_breaking_point = 4
@breaking_reason_none = 0
@breaking_reason_job_change = 1
@breaking_reason_fired = 2
@breaking_reason_denied = 3
@breaking_reason_timeout = 4
@breaking_reason_lifetime = 5
@breaking_reason_retraining = 6


# Unassigned from their job. Obsession increases one level.
# If they are immediately reassigned, it will go back down.
# Scope: Leader (just before unassignment)
leader_event = {
	id = obsessions_mod_scientist.1
	hide_window = yes
	is_triggered_only = yes

	# Check the flag, not the trait, in case the trait has been hidden.
	trigger = { has_leader_flag = obsession_obsessed }

	immediate = {
		# Increase by one and check whether that is their breaking point.
		change_variable = { which = obsession_level value = 1 }
		if = {
			limit = { check_variable = { which = obsession_level value >= @obsession_breaking_point } }
			owner = {
				save_global_event_target_as = obsession_source_country
			}
			set_variable = { which = obsession_break_reason value = @breaking_reason_job_change }
			leader_event = { id = obsessions_mod_scientist.6 days = 30 }
		}
	}
}

# Assigned to a job
# Scope: Leader (after assignment)
leader_event = {
	id = obsessions_mod_scientist.2
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_leader_flag = obsession_obsessed }

	immediate = {
		# Decrease obsession level by one
		change_variable = { which = obsession_level value = -1 }
	}
}

# A leader leveled up.
# Scope = Country
# From = Leader
country_event = {
	id = obsessions_mod_scientist.3
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_leader_flag = obsession_obsessed } }

	immediate = {
		from = {
			if = {
				limit = {
					has_skill >= @obsession_end_level
				}
				owner ={
					# Their obsession is ready to come to an end, issue the special project.
					country_event = { id = obsessions_mod_scientist.9 scopes = { from = from } }
				}
			}
		}
	}
}

# A leader fired.
# Scope = Country
# From = Leader
country_event = {
	id = obsessions_mod_scientist.4
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_leader_flag = obsession_obsessed } }

	immediate = {
		save_global_event_target_as = obsession_source_country

		# Firing them always causes them to break immediately.
		# Firing kills them, so we create a new one with the same name and exile them.
		from = {
			set_variable = { which = obsession_level value = @obsession_breaking_point }
			set_variable = { which = obsession_break_reason value = @breaking_reason_fired }
			leader_event = { id = obsessions_mod_scientist.6 }
		}
	}
}

# A leader died.
# Scope = Country
# From = Leader
country_event = {
	id = obsessions_mod_scientist.5
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_leader_flag = obsession_obsessed } }

	immediate = {
		save_global_event_target_as = obsession_source_country
		# If an obsessed leader dies, a junior scientist usually "finds their notes" after their funeral
		from = {
			save_global_event_target_as = obsessed_scientist_dead
			exile_leader_as = obsessed_scientist_dead
		}
		country_event = { id = obsessions_mod_scientist.7 days = 30 }
	}
}

# Breaking point!
leader_event = {
	id = obsessions_mod_scientist.6
	hide_window = yes
	is_triggered_only = yes

	# Check to make sure they are still a scientist. We don't break scientists if they have
	# become the country ruler.
	immediate = {
		if = {
			limit = {
				leader_class = scientist
				NOT = { check_variable = { which = obsession_break_reason value = @breaking_reason_none } }
			}
			species = {
				save_global_event_target_as = obsessed_scientist_species
			}
			event_target:obsession_source_country = {
				# Inform the owner of their disappearance.
				country_event = { id = obsessions_mod_scientist.12 days = 1 }
			}
			remove_leader_flag = obsession_obsessed
			set_leader_flag = obsession_breakdown
			exile_leader_as = obsessed_scientist_breakdown
			save_global_event_target_as = obsessed_scientist_breakdown
			event_target:obsessions_planet_target = {
				planet_event = {
					id = obsessions_mod_scientist.13
					days = 720
					scopes = { from = event_target:obsessed_scientist_breakdown }
				}
			}
		}
	}
}

# Post funeral event transferring obsession
country_event = {
	id = obsessions_mod_scientist.7
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = scientist
				has_skill <= 4
				leader_age <= 60
				NOT = { has_leader_flag = obsession_obsessed }
			}
			# This scientist found their notes and will inherit the dead leader's obsession
			save_event_target_as = inheriting_scientist
		}
		country_event = {
			id = obsessions_mod_scientist.8
			scopes = { from = event_target:inheriting_scientist fromfrom = event_target:obsessed_scientist_dead }
		}
	}
}

# A new leader found the notes and got obsessed.
# from = inheriting scientist
# fromfrom = dead scientist
country_event = {
	id = obsessions_mod_scientist.8
	is_triggered_only = yes
	title = "obsessions_mod_scientist.8.name"
	desc = "obsessions_mod_scientist.8.desc"
	picture = GFX_evt_space_funeral
	show_sound = event_life_support_fail

	immediate = {
		from = {
			add_trait = leader_trait_obsessed_1
			set_leader_flag = obsession_obsessed
			set_variable = { which = obsession_level value = 1 }
			add_experience = 1000
			if = {
				limit = { is_idle = yes }
				change_variable = { which = obsession_level value = 1 }
			}
			owner = {
				country_event = { id = obsessions_mod_scientist.14 days = 1800 scopes = { from = from } }
			}
		}
	}

	option = {
		name = obsessions_mod_scientist.8.a
		# We already gave them the trait above, but show it in the tooltip.
		tooltip = {
			from = {
				add_trait = leader_trait_obsessed_1
			}
		}
	}
}

# An obsessed leader has reached the skill level necessary to end their obsession.
# from = obsessed scientist
country_event = {
	id = obsessions_mod_scientist.9
	is_triggered_only = yes
	title = "obsessions_mod_scientist.9.name"
	desc = "obsessions_mod_scientist.9.desc"
	picture = GFX_evt_bribery
	show_sound = event_conversation

	immediate = {
		from = {
			# Zero out any pending breaks and make it hard to hit a new break while the project is active.
			set_variable = { which = obsession_level value = 0 }
			set_variable = { which = obsession_break_reason value = @breaking_reason_none }
		}
	}

	option = {
		name = obsessions_mod_scientist.9.a
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 1000
			}
		}
		add_resource = { energy = -1000 }
		if = {
			limit = { from = { has_leader_flag = obsession_alpine } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_ALPINE"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_arctic } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_ARCTIC"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_tundra } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_TUNDRA"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_ocean } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_OCEAN"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_continental } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_CONTINENTAL"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_tropical } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_TROPICAL"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_savannah } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_SAVANNAH"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_arid } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_ARID"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else_if = {
			limit = { from = { has_leader_flag = obsession_desert } }
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT_DESERT"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
		else = {
			# Nothing should hit the generic one anymore, but leave it as a fallback.
			enable_special_project = {
				name = "OBSESSIONS_MOD_FULFILL_OBSESSION_PROJECT"
				location = event_target:obsessions_planet_target
				owner = root.owner
			}
		}
	}

	# Reject the Special Project. Bad idea...
	option = {
		name = obsessions_mod_scientist.9.b
		hidden_effect = {
			save_global_event_target_as = obsession_source_country
			from = {
				set_variable = { which = obsession_level value = @obsession_breaking_point }
				set_variable = { which = obsession_break_reason value = @breaking_reason_denied }
				leader_event = { id = obsessions_mod_scientist.6 days = 1 }
			}
		}
	}
}

# Special Project completed.
ship_event = {
	id = obsessions_mod_scientist.10
	title = "obsessions_mod_scientist.10.name"
	desc = "obsessions_mod_scientist.10.desc"
	picture = GFX_evt_grand_speech
	show_sound = event_conversation
	location = event_target:obsessions_planet_target
	is_triggered_only = yes
	auto_opens = yes
	
	immediate = {
		leader = {
			remove_leader_flag = obsession_obsessed
			set_variable = { which = obsession_level value = 0 }
			set_variable = { which = obsession_break_reason value = 0 }
		}
	}

	# It's finally over, Mr. Frodo.
	option = {
		name = obsessions_mod_scientist.10.a
		leader = {
			add_experience = 1000
			remove_trait_effect = { TRAIT = leader_trait_obsessed_1 }
			add_trait = leader_trait_obsession_fulfilled
		}
	}

}

# Special Project timed out!
# Scope = Country
country_event = {
	id = obsessions_mod_scientist.11
	hide_window = yes
	is_triggered_only = yes

	trigger = { from = { has_leader_flag = obsession_obsessed } }

	immediate = {
		# Project timeout always causes them to break immediately.
		save_global_event_target_as = obsession_source_country
		random_owned_leader = {
			limit = { has_leader_flag = obsession_obsessed }
			set_variable = { which = obsession_level value = @obsession_breaking_point }
			set_variable = { which = obsession_break_reason value = @breaking_reason_timeout }
			leader_event = { id = obsessions_mod_scientist.6 days = 1 }
		}
	}
}

# An obsessed leader has disappeared
country_event = {
	id = obsessions_mod_scientist.12
	is_triggered_only = yes
	title = "obsessions_mod_scientist.12.name"
	
	picture = GFX_evt_worrying_signal
	show_sound = event_conversation

	desc = {
		exclusive_trigger = {
			event_target:obsessed_scientist_breakdown = {
				check_variable = {
					which = obsession_break_reason
					value = @breaking_reason_job_change
				}
			}
		}
		text = "obsessions_mod_scientist.12.desc_job"
	}

	desc = {
		exclusive_trigger = {
			event_target:obsessed_scientist_breakdown = {
				check_variable = {
					which = obsession_break_reason
					value = @breaking_reason_fired
				}
			}
		}
		text = "obsessions_mod_scientist.12.desc_fired"
	}

	desc = {
		exclusive_trigger = {
			event_target:obsessed_scientist_breakdown = {
				check_variable = {
					which = obsession_break_reason
					value = @breaking_reason_denied
				}
			}
		}
		text = "obsessions_mod_scientist.12.desc_denied"
	}

	desc = {
		exclusive_trigger = {
			event_target:obsessed_scientist_breakdown = {
				check_variable = {
					which = obsession_break_reason
					value = @breaking_reason_timeout
				}
			}
		}
		text = "obsessions_mod_scientist.12.desc_timeout"
	}

	desc = { text = "obsessions_mod_scientist.12.desc" }

	option = {
		name = obsessions_mod_scientist.12.a
	}
}

# Punishment event. The player failed to contain the scientist's obsession and they have
# escaped and gone to the planet.
planet_event = {
	hide_window = yes
	is_triggered_only = yes
	id = obsessions_mod_scientist.13

	immediate = {
		# Check to ensure the planet is habitable. It should be since obsession planets always are,
		# but something might have happened to render it uninhabitable. If that happened, spawn a pirate
		# fleet with the obsessed scientist as the admiral.
		if = {
			limit = {
				OR = {
					is_a_planet = no
					habitable_planet = no
				}
			}
			create_obsessed_pirate_king = yes
		}
		# For all other cases we currently have the obsessed just take over the system/colony.
		# 1) If the system is unclaimed.
		# 2) If the system is claimed by ai and the planet uncolonized.
		# 3) If the system is claimed by ai and the planet colonized.
		# 4) If the system is claimed by human and the planet uncolonized.
		# 5) If the system is claimed by human and the planet colonized.
		else = {
			create_obsessed_country = yes
			obsessed_take_system = yes
			obsessed_take_planet = yes
			create_obsessed_fleet = yes
		}
		
	}
	
}

# Looping event to ramp up a scientists's obsession level
# from = scientist
country_event = {
	id = obsessions_mod_scientist.14
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				exists = from
				from ={
					has_leader_flag = obsession_obsessed
					NOT = { has_trait = leader_trait_obsession_fulfilled }
				}
				from = {
					check_variable = { which = obsession_level value < @obsession_breaking_point }
					check_variable = { which = obsession_level value > 0 }
				}
			}
			country_event = { id = obsessions_mod_scientist.15 scopes = { from = from } }
			country_event = { id = obsessions_mod_scientist.14 days = 1800 scopes = { from = from } }
		}
	}
}

country_event = {
	id = obsessions_mod_scientist.15
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		# Pick a ramp up situation.
		random_list = {
			1 = {
				# Silently increase their level.
				country_event = { id = obsessions_mod_scientist.16 scopes = { from = from } }
			}
			2 = {
				# Silently increase their level if they are idle.
				country_event = { id = obsessions_mod_scientist.19 scopes = { from = from } }
			}
			10 = {
				modifier = {
					factor = 0
					from = {
						OR = {
							has_trait = leader_trait_custom_AI_assistant
							has_trait = leader_trait_sapient_AI_assistant
							owner = {
								OR = {
									has_authority = "auth_hive_mind"
									has_authority = "auth_machine_intelligence"
									has_policy_flag = ai_outlawed
								}
							}
						}
					}
				}
				# Give them an AI assistant
				country_event = { id = obsessions_mod_scientist.17 scopes = { from = from } }
			}
			10 = {
				modifier = {
					factor = 0
					from = {
						has_leader_flag = obsession_retrained
					}
				}
				# Send them for retraining
				country_event = { id = obsessions_mod_scientist.18 scopes = { from = from } }
			}
		}
	}
}

country_event = {
	id = obsessions_mod_scientist.16
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		from = {
			add_experience = 500
			change_variable = { which = obsession_level value = 1 }
			if = {
				limit = { check_variable = { which = obsession_level value >= @obsession_breaking_point } }
				owner = {
					save_global_event_target_as = obsession_source_country
				}
				set_variable = { which = obsession_break_reason value = @breaking_reason_lifetime }
				leader_event = { id = obsessions_mod_scientist.6 days = 30 }
			}
		}
	}
}

country_event = {
	id = obsessions_mod_scientist.17
	is_triggered_only = yes
	title = "obsessions_mod_scientist.17.name"
	desc = "obsessions_mod_scientist.17.desc"
	picture = GFX_evt_bribery
	show_sound = event_conversation


	# Give them an assistant
	option = {
		name = obsessions_mod_scientist.17.a
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 1000
			}
		}
		add_resource = { energy = -1000 }
		from = {
			add_trait = leader_trait_custom_AI_assistant
			add_experience = 500
		}
	}

	# Reject the idea.
	option = {
		name = obsessions_mod_scientist.17.b
		hidden_effect = {
			from = {
				change_variable = { which = obsession_level value = 1 }
				if = {
					limit = { check_variable = { which = obsession_level value >= @obsession_breaking_point } }
					owner = {
						save_global_event_target_as = obsession_source_country
					}
					set_variable = { which = obsession_break_reason value = @breaking_reason_lifetime }
					leader_event = { id = obsessions_mod_scientist.6 days = 30 }
				}
			}
		}
	}
}

country_event = {
	id = obsessions_mod_scientist.18
	is_triggered_only = yes
	title = "obsessions_mod_scientist.18.name"
	desc = "obsessions_mod_scientist.18.desc"
	picture = GFX_evt_bribery
	show_sound = event_conversation

	immediate = {
		from = {
			set_leader_flag = obsession_retrained
		}
	}

	# Send them for retraining, actually a bad idea.
	option = {
		trigger = {
			is_egalitarian = no
		}
		name = obsessions_mod_scientist.18.a
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 1000
			}
		}
		add_resource = { energy = -1000 }
		hidden_effect = {
			from = {
				add_experience = 1000
				change_variable = { which = obsession_level value = 1 }
				if = {
					limit = { check_variable = { which = obsession_level value >= @obsession_breaking_point } }
					owner = {
						save_global_event_target_as = obsession_source_country
					}
					set_variable = { which = obsession_break_reason value = @breaking_reason_retraining }
					leader_event = { id = obsessions_mod_scientist.6 days = 30 }
				}
			}
		}
	}

	# Egalitarian option
	option = {
		trigger = {
			is_egalitarian = yes
		}
		name = obsessions_mod_scientist.18.b
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 1000
			}
		}
		add_resource = { energy = -1000 }
		hidden_effect = {
			from = {
				add_experience = 1000
			}
		}
	}

	# Reject the idea.
	option = {
		name = obsessions_mod_scientist.18.c
		hidden_effect = {
			from = {
				add_experience = 500
			}
		}
	}
}

country_event = {
	id = obsessions_mod_scientist.19
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		from = {
			add_experience = 500
			if = {
				limit = { is_idle = yes }
				change_variable = { which = obsession_level value = 1 }
			}
			if = {
				limit = { check_variable = { which = obsession_level value >= @obsession_breaking_point } }
				owner = {
					save_global_event_target_as = obsession_source_country
				}
				set_variable = { which = obsession_break_reason value = @breaking_reason_lifetime }
				leader_event = { id = obsessions_mod_scientist.6 days = 30 }
			}
		}
	}
}